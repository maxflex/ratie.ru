<?php	// Контроллер	class IndexController extends Controller	{		public $defaultAction = "Index";				// Папка вьюх		protected $_viewsFolder	= "index";						public function actionIndex()		{			// Если входим			if (count($_POST)) {				// Находим пользователя				$User = User::find(array(					"condition" => "login='{$_POST['login']}' AND password='{$_POST['password']}'",				));									if ($User) {										// Входим в сессию					$User->toSession();										$this->redirect($User->login);				} else {					echo "<h1>Не удалось войти</h1>";				}			}						$this->render("index");		}				public function actionLogout()		{			session_destroy();						$this->redirect("/");		}				// Тут я буду тестить		public function actionAuth()		{			// Подключаем сторонний JS			addJs("//vk.com/js/api/openapi.js", true);						// Подключаем внутренний JS			addJs("auth");						$this->render("auth");		}						// Создаем нового пользователя		public function actionAjaxLoginOrRegister()		{			// Получаем данные пользователя			$user_data = $_POST;						// Если получили			if (!empty($user_data)) {				// Проверяем существует ли пользователь с таким ID вконтакте				$User = User::find(array(					"condition"	=> "id_vk = ".$user_data["uid"],				));								// Если пользователь не существует, то создаем нового				if (!$User) {					// Создаем нового пользователя					$User = new User(array(						"login"			=> $user_data["domain"],						"first_name"	=> $user_data["first_name"],						"last_name"		=> $user_data["last_name"],						"avatar"		=> $user_data["photo_max"],						"id_vk"			=> $user_data["uid"],						"gender"		=> ($user_data["sex"] == 2 ? "0" : "1"),						"social"		=> array(							"vk"		=> $user_data["domain"],							"instagram"	=> $user_data["instagram"],							"twitter"	=> $user_data["twitter"],						),					));										// Устанавливаем значения по умолчанию					$User->setDefaults();										// Сохраняем пользователя					$User->save();										// Если логин уже занят, изменяем (сразу в условии) и сохраняем еще раз					// Предыдущее сохранение обязательно, так как для изменения логина нужен $this->id					if ($User->loginCheck()) {						$User->save();					}										// Создаем таблицу пользователя					$User->createTable();				}								// Логинимся				$User->toSession();								// Возвращаем логин пользователя для редиректа				echo json_encode(array(					"login"	=> $User->login,				));			}		}			}