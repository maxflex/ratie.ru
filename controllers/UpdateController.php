<?php	// Контроллер	class UpdateController extends Controller	{		public $defaultAction = "Update";				// Папка вьюх		protected $_viewsFolder	= "update";				// Каким юзерам доступна страница обновления		public static $allowedUsers = array(1,24,262);				// Перед выполнением любого действия, проверяем на админа		public function beforeAction()		{			if (!User::loggedIn() || !in_array(User::fromSession(false)->id, self::$allowedUsers)) {				$this->render("access_denied", array(), true);				exit();				}		}				/*		 * Рендер страницы обновления		 */		public function actionUpdate()		{			$this->addJs("update");			// Подключаем сторонний JS			$this->addJs("//vk.com/js/api/openapi.js", true);						$this->render("update");		}				/*		 * Рендер страницы обновления друзей		 */		public function actionFriends()		{			$this->addJs("update_friends");			// Подключаем сторонний JS			$this->addJs("//vk.com/js/api/openapi.js", true);						$this->render("update_friends");		}				/*		 * Получить количество пользователей		 */		public function actionAjaxGetUserCount()		{			User::$initialize_on_new = false;						echo User::findAll(array(), true);		}				/*		 * Само обновление		 * Обновляются пользователи начиная с $_POST["start"], заканчивая $_POST["end"]		 * Возвращается 1 в случае успеха, иначе возвращает ошибку		 */		public function actionAjaxUpdate()		{			User::$initialize_on_new = false;						$Users = User::findAll(array(				"condition" => "id>=".(int)$_POST["start"]." AND id<=".(int)$_POST["end"],			));						foreach ($Users as $User) {				// Устанавливаем соединение с БД								initUserConnection($User->id);								dbUser()->multi_query("					sfdsfsd				");								if (dbUser()->error) {					echo "<b>ERROR ON USER_".$User->id.": </b>";					echo dbUser()->error;					exit();				}			}			echo 1;		}				/*		 * Получаем ID Вконтакте пользователя Ratie		 */		public function actionAjaxGetIdVK()		{			User::$initialize_on_new = false;						$User = User::findById((int)$_POST["id_user"]);						echo $User->id_vk;		}				/*		 * Обновляем друзей		 */		public function actionAjaxAddFriends()		{			// Получаем пользователя			$User = User::findById((int)$_POST["id_user"]);						// Выключаем инициализацию			User::$initialize_on_new = false;						// Составляем условие поиска друзей пользователя			$condition = implode(",", $_POST["ids"]);						// Ищем друзей пользователя			$Friends = User::findAll(array(				"condition"	=> "id_vk in ($condition)"			));						// Если друзья нашлись			if ($Friends) {				// Добавляем друзей к текущему пользователю				foreach ($Friends as $Friend) {					// Добавляем друга в БД					if (Friend::add($Friend->id)) {						$User->friends++;			// Увеличеваем счетчик друзей						}				}								// Сохраняем пользователя для обновления счетчика друзей				$User->save("friends");			}		}			}